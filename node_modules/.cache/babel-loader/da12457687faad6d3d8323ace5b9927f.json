{"ast":null,"code":"var _jsxFileName = \"/Users/jk/Desktop/Flatiron School/Development/code/phases/phase-2/fisphase2-project/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useFetch from './sub_component/useFetch';\nimport SearchFilterBar from './sub_component/SearchFilterBar';\nimport StockDisplayer from './StockDisplayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  document.title = 'Inventory Manager';\n  const [stocks, setStocks] = useFetch(\"https://fisphase2-project-database.herokuapp.com/materials\");\n  const [newQuantity, setNewQuantity] = useState(0);\n  const [filterByID, setFilterByID] = useState(0);\n  const [filterByType, setFilterByType] = useState('all');\n  const [filterBySupplier, setFilterBySupplier] = useState('all');\n  const settedTypes = [...new Set(stocks.map(stock => stock.type))];\n  const settedSuppliers = [...new Set(stocks.map(stock => stock.supplier))];\n\n  const handleQuantitySubmit = (e, targetStock) => {\n    e.preventDefault();\n    console.log(stock);\n    const updatedStockQuantity = [...stocks].map(stock => stock.id === targetStock.id ? { ...stock,\n      quantity: newQuantity\n    } : stock);\n    fetch(`https://fisphase2-project-database.herokuapp.com/materials/${targetStock.id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        quantity: newQuantity\n      })\n    }).then(r => r.json()).then(setStocks(updatedStockQuantity)).catch(err => alert(err.message));\n  };\n\n  const filteredStocks = [...stocks].filter(stock => (filterByID === stock.id || filterByID === 0) && true).filter(stock => (filterByType === stock.type || filterByType === 'all') && true).filter(stock => (filterBySupplier === stock.supplier || filterBySupplier === 'all') && true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchFilterBar, {\n      settedTypes: settedTypes,\n      settedSuppliers: settedSuppliers,\n      setFilterByID: setFilterByID,\n      setFilterByType: setFilterByType,\n      setFilterBySupplier: setFilterBySupplier\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StockDisplayer, {\n      filteredStocks: filteredStocks,\n      setNewQuantity: setNewQuantity,\n      handleQuantitySubmit: handleQuantitySubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"jq7FFTtVPZM3Qw3Wr/Y6gt+R+Zk=\", false, function () {\n  return [useFetch];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useFetch","SearchFilterBar","StockDisplayer","Dashboard","document","title","stocks","setStocks","newQuantity","setNewQuantity","filterByID","setFilterByID","filterByType","setFilterByType","filterBySupplier","setFilterBySupplier","settedTypes","Set","map","stock","type","settedSuppliers","supplier","handleQuantitySubmit","e","targetStock","preventDefault","console","log","updatedStockQuantity","id","quantity","fetch","method","headers","body","JSON","stringify","then","r","json","catch","err","alert","message","filteredStocks","filter"],"sources":["/Users/jk/Desktop/Flatiron School/Development/code/phases/phase-2/fisphase2-project/src/components/Dashboard.js"],"sourcesContent":["import { useState } from 'react';\n\n\nimport useFetch from './sub_component/useFetch';\nimport SearchFilterBar from './sub_component/SearchFilterBar';\nimport StockDisplayer from './StockDisplayer';\n\n\nconst Dashboard = () => {\n  document.title = 'Inventory Manager';\n\n\n  const [stocks, setStocks] = useFetch(\"https://fisphase2-project-database.herokuapp.com/materials\");\n  const [newQuantity, setNewQuantity] = useState(0);\n  \n\n  const [filterByID, setFilterByID] = useState(0);\n  const [filterByType, setFilterByType] = useState('all');\n  const [filterBySupplier, setFilterBySupplier] = useState('all');\n  \n  \n  const settedTypes = [...new Set(stocks.map(stock => stock.type))];\n  const settedSuppliers = [...new Set(stocks.map(stock => stock.supplier))];\n\n\n  const handleQuantitySubmit = (e, targetStock) => {\n    e.preventDefault();\n\n    console.log(stock)\n    const updatedStockQuantity = [...stocks].map(stock => stock.id === targetStock.id ? {...stock, quantity: newQuantity} : stock); \n\n\n    fetch(`https://fisphase2-project-database.herokuapp.com/materials/${targetStock.id}`, {\n        method: \"PATCH\",\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({quantity: newQuantity})\n    })\n    .then(r => r.json())\n    .then(setStocks(updatedStockQuantity))\n    .catch(err => alert(err.message))\n  };\n\n\n  const filteredStocks = [...stocks].filter(stock => (filterByID === stock.id || filterByID === 0) && true)\n                                    .filter(stock => (filterByType === stock.type || filterByType === 'all') && true)\n                                    .filter(stock => (filterBySupplier === stock.supplier || filterBySupplier === 'all') && true)\n\n\n  return (\n    <div>\n        <SearchFilterBar settedTypes={settedTypes} \n                         settedSuppliers={settedSuppliers}\n                         setFilterByID={setFilterByID}\n                         setFilterByType={setFilterByType} \n                         setFilterBySupplier={setFilterBySupplier} />\n\n\n        <StockDisplayer filteredStocks={filteredStocks} \n                        setNewQuantity={setNewQuantity} \n                        handleQuantitySubmit={handleQuantitySubmit} />\n    </div>\n  );\n};\n\n\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}