{"ast":null,"code":"var _jsxFileName = \"/Users/jk/Desktop/Flatiron School/Development/code/phases/phase-2/fisphase2-project/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport SearchFilterBar from './sub_component/SearchFilterBar';\nimport StockDisplayer from './StockDisplayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  document.title = 'Inventory Manager';\n  const [stocks, setStocks] = useState([]);\n  const [newQuantity, setNewQuantity] = useState(0);\n  const [filterByID, setFilterByID] = useState(0);\n  const [filterByType, setFilterByType] = useState('all');\n  const [filterBySupplier, setFilterBySupplier] = useState('all');\n  const types = [...stocks].map(stock => stock.type.charAt(0));\n  const suppliers = [...stocks].map(stock => stock.supplier.charAt(0));\n  useEffect(() => {\n    fetch('http://localhost:3000/materials').then(r => r.json()).then(setStocks).catch(err => alert(err.message));\n  }, []);\n\n  const handleQuantitySubmit = (e, targetStock) => {\n    e.preventDefault();\n    const newStocks = [...stocks].map(stock => stock.id === targetStock.id ? { ...stock,\n      quantity: newQuantity\n    } : stock);\n    fetch(`http://localhost:3000/materials/${targetStock.id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        quantity: newQuantity\n      })\n    }).then(r => r.json()).then(setStocks(newStocks)).catch(err => alert(err.message));\n  };\n\n  const filteredStocks = [...stocks].filter(stock => {\n    if (filterByID === stock.id || filterByID === 0) return true;\n  }).filter(stock => {\n    if (filterByType === stock.type || filterByType === 'all') return true;\n  }).filter(stock => {\n    if (filterBySupplier === stock.supplier || filterBySupplier === 'all') return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchFilterBar, {\n      types: types,\n      suppliers: suppliers,\n      setFilterByID: setFilterByID,\n      setFilterByType: setFilterByType,\n      setFilterBySupplier: setFilterBySupplier\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StockDisplayer, {\n      filteredStocks: filteredStocks,\n      setNewQuantity: setNewQuantity,\n      handleQuantitySubmit: handleQuantitySubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Dashboard, \"K8eI64VCQQhqHY5RmI+x26nWIGo=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","SearchFilterBar","StockDisplayer","Dashboard","document","title","stocks","setStocks","newQuantity","setNewQuantity","filterByID","setFilterByID","filterByType","setFilterByType","filterBySupplier","setFilterBySupplier","types","map","stock","type","charAt","suppliers","supplier","fetch","then","r","json","catch","err","alert","message","handleQuantitySubmit","e","targetStock","preventDefault","newStocks","id","quantity","method","headers","body","JSON","stringify","filteredStocks","filter"],"sources":["/Users/jk/Desktop/Flatiron School/Development/code/phases/phase-2/fisphase2-project/src/components/Dashboard.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nimport SearchFilterBar from './sub_component/SearchFilterBar';\nimport StockDisplayer from './StockDisplayer';\n\nconst Dashboard = () => {\n  document.title = 'Inventory Manager';\n\n  const [stocks, setStocks] = useState([]);\n  const [newQuantity, setNewQuantity] = useState(0);\n  const [filterByID, setFilterByID] = useState(0);\n  const [filterByType, setFilterByType] = useState('all');\n  const [filterBySupplier, setFilterBySupplier] = useState('all');\n\n  const types = [...stocks].map(stock => stock.type.charAt(0));\n  const suppliers = [...stocks].map(stock => stock.supplier.charAt(0));\n\n\n  useEffect(() => {\n    fetch('http://localhost:3000/materials')\n    .then(r => r.json())\n    .then(setStocks)\n    .catch(err => alert(err.message))\n  }, []);\n\n\n  const handleQuantitySubmit = (e, targetStock) => {\n    e.preventDefault();\n\n    const newStocks = [...stocks].map(stock => stock.id === targetStock.id ? {...stock, quantity: newQuantity} : stock); \n\n    fetch(`http://localhost:3000/materials/${targetStock.id}`, {\n        method: \"PATCH\",\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({quantity: newQuantity})\n    })\n    .then(r => r.json())\n    .then(setStocks(newStocks))\n    .catch(err => alert(err.message))\n  };\n\n\n  const filteredStocks = [...stocks].filter(stock => {if (filterByID === stock.id || filterByID === 0) return true})\n                                    .filter(stock => {if (filterByType === stock.type || filterByType === 'all') return true})\n                                    .filter(stock => {if (filterBySupplier === stock.supplier || filterBySupplier === 'all') return true})\n\n\n    return (\n      <div>\n        <SearchFilterBar types={types} suppliers={suppliers} setFilterByID={setFilterByID} setFilterByType={setFilterByType} setFilterBySupplier={setFilterBySupplier} />\n        <StockDisplayer filteredStocks={filteredStocks} setNewQuantity={setNewQuantity} handleQuantitySubmit={handleQuantitySubmit} />\n      </div>\n    )\n};\n\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}